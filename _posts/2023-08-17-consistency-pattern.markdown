---
layout: post
title:  "数据一致性模型"
date:   2023-08-17 15:40:56
categories: jekyll update
---

### 一、前提知悉
#### BASE理论
##### 概念
BASE是三个短语的简写，即基本可用（Basically Available）、软状态（Soft State）和最终一致性（Eventually Consistent）  

BASE理论的核心是最终一致性，即使无法做到强一致性，但每个应用都可以根据自身的业务特点，采用适当的方式使系统达到最终一致性

#### 要素详解
##### 基本可用
基本可用就是不追求CAP中「任何时候，读写都是成功的」，而是系统能够基本运行，一直提供服务。强调了分布式系统在出现不可预知的故障的时候，允许损失部分可用性，
相比正常的系统，允许损失部分可用性，相比正常的系统，可能是响应时间过长，或者服务降级。举个例子，在双十一秒杀活动中，如果抢购人数超过了系统QPS峰值，可能会排队或者
限流，通过合理手段保护系统的稳定性，保证主要的服务正常，保证基本可用
##### 软状态
对应ACID事务的原子性，在ACID事务中，实现的是事务的强一致性，要么全做要么不做，所有用户看到的数据一致。其中原子性要求多个节点的数据副本是一致的，强调数据的一致性。原子性
可以理解为一种"硬状态"，软状态则允许系统中的数据存在中间状态，并认为该状态不影响系统的整体可用性，允许多个不同节点的数据副本存在延时
##### 最终一致性
数据不可能一直是软状态，必然会在一定时间期限之后达到各个节点的一致性，期限过后，应当保证所有副本保持数据一致性，也就是达到数据的最终一致性。
在系统设计中，最终一致性实现时间取决于网络延时、系统负载、不同的存储选型、不同数据复制方案设计等因素

### 二、不同数据一致性模型
一般来说，数据一致性分为强一致性和弱一致性，强一致性也叫线性一致性，除此之外，其它所有的一致性都是弱一致性。  
弱一致性根据不同业务场景，又可以分解为更细分的模型。在互联网的绝大多数场景中，都需要牺牲强一致性换取系统的高可用性
系统往往只需保证最终一致性，只要这个最终时间是在用户可接受范围内
![yizhixing](https://github.com/xuxing421/imageBed/assets/56280293/e0283f96-994f-4193-8614-50a3afc0100f)




### 三、CP还是AP，这是一个问题
