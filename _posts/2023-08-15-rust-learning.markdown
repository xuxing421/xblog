---
layout: post
title:  "Rust学习手册"
date:   2023-08-15 15:40:56
categories: jekyll update
---

### 一、概念

#### 前提悉知

   **cargo**   
   rust的构建系统和包管理器。  
   常用命令： 
   ```
 cargo new xxx:创建工程项目 
 cargo build  
 cargo run  
```  
  

### 二、常见回收算法

**1.引用计数**    
 &emsp;代表语言：
 **php、Python**    
 &emsp;优点: 
 实现简单、 即时回收、 内存利用率高、不暂停程序      
 &emsp;缺点: 
 循环引用无法回收、成本较高，需要维护计数器变量、无法保证响应时间 


**2.追踪式**    
   &ensp; __标记复制__  
    &emsp; 将内存分为相同两块，一块内存使用完之后把对象复制到另一块内存，恢复第一块内存
	&emsp;优点：解决内存碎片化，防止分配较大连续内存空间的GC问题
	&emsp;缺点：内存利用率低

   &ensp; __标记清除__   
	&emsp;优点：空间利用率高，不需要额外空间复制对象，也不需要给每个对象设置引用计数器
	&emsp;缺点：可能产生大量碎片，导致下一次GC提前

   &ensp; __标记整理__  
    &emsp;分代式：根据存活时间分为年轻代，老年代，永久代；如果一个对象存活时间不长则倾向于被回收


### 三、GO GC 三色标记清扫算法
&ensp;**标记阶段：** 从根对象出发查找并标记堆中所有存活的对象；    
&ensp;**清除阶段：** 遍历堆中的全部对象，回收未被标记的垃圾对象并将回收的内存加入空闲链表

GC的对象们
白色对象 — 潜在的垃圾，其内存可能会被垃圾收集器回收；
黑色对象 — 活跃的对象，包括不存在任何引用外部指针的对象以及从根对象可达的对象；
灰色对象 — 活跃的对象，因为存在指向白色对象的外部指针，垃圾收集器会扫描这些对象的子对象；
